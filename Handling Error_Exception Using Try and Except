{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Handling Error/Exception Using Try and Except","provenance":[],"authorship_tag":"ABX9TyNrzAgICY2dzPs7FJasaUdy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"CU2G6Ml-LSYf"},"outputs":[],"source":["Type of Error\n","\n","1. ZeroDivisionError\n","2. FileNotFoundError\n","3. KeyError\n","4. ValueError\n","5. TypeError\n","6. Handling Complex Error "]},{"cell_type":"markdown","source":["Zero Division Error \n","\n","The zero division error is due to either a number being divided by 0, or a number being modulo by 0. The denominator of the division operation should be a non zero numeric value. If the demonimator is zero then ZeroDivisionError will be thrown by python interpreter."],"metadata":{"id":"syOpmATeNHSN"}},{"cell_type":"code","source":["a = 10\n","b = 0\n","\n","a/b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":200},"id":"PCuXxDqvMVHr","executionInfo":{"status":"error","timestamp":1648784901198,"user_tz":-420,"elapsed":52,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"682a1c40-2f8e-4fb8-aeef-df08d94bf8a0"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ZeroDivisionError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mZeroDivisionError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-7e90657db9bb>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0ma\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mZeroDivisionError\u001b[0m: division by zero"]}]},{"cell_type":"markdown","source":["Simple Example"],"metadata":{"id":"P4ZaCwO_RiDO"}},{"cell_type":"code","source":["try:\n","    bagi = a/b\n","except ZeroDivisionError:\n","    print(\"Your Denominator Cant be 0\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0PMAK4JARgg3","executionInfo":{"status":"ok","timestamp":1648785564670,"user_tz":-420,"elapsed":328,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"b00a3737-d608-4490-c285-83da74728a32"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Your Denominator Cant be 0\n"]}]},{"cell_type":"markdown","source":["Another Example using While Loop"],"metadata":{"id":"NJRX-yJ-Ry2-"}},{"cell_type":"code","source":["while True:\n","    try:\n","        a = int(input(\"input your numerator \"))\n","        b = int(input(\"input your demonimator \"))\n","    \n","        divide = a/b\n","        print(divide) \n","        break\n","    except ZeroDivisionError:   \n","        print(\"Demonimator can't 0\")\n","        break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gwvJqZsaPG4q","executionInfo":{"status":"ok","timestamp":1648785472748,"user_tz":-420,"elapsed":3693,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"a5fed539-d0aa-4b7a-ca98-8ce574b1ca88"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["input your numerator 10\n","input your demonimator 0\n","Demonimator can't 0\n"]}]},{"cell_type":"markdown","source":["File Not Found Error\n","\n","FileNotFoundError indicates that Python cannot find the file you are referencing. Python raises this error because your program cannot continue running without being able to access the file to which your program refers."],"metadata":{"id":"9ZwSH3EJNnls"}},{"cell_type":"code","source":["open(\"testfile.py\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"BJ-QDEZlUUd0","executionInfo":{"status":"error","timestamp":1648792311124,"user_tz":-420,"elapsed":351,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"8b3efd6c-3832-402e-ede2-40e56448429a"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-34-f907a9caec24>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"testfile.py\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'testfile.py'"]}]},{"cell_type":"markdown","source":["So to handling this we can use Try and Except to give an explanation if the program can not running the file that we refers."],"metadata":{"id":"EQUJSon8U2Gk"}},{"cell_type":"code","source":["try:\n","    with open(\"testfile.py\") as file:\n","        print(file.read())\n","except FileNotFoundError:\n","      print(\"This File Does Not Exist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7oXkmJNWUXd7","executionInfo":{"status":"ok","timestamp":1648792318992,"user_tz":-420,"elapsed":320,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"daa4e8ee-2ac5-4042-db7f-e4c0bebc61dd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["This File Does Not Exist\n"]}]},{"cell_type":"markdown","source":["KeyError\n","\n","A Python KeyError exception is what is raised when you try to access a key that isn't in a dictionary ( dict )."],"metadata":{"id":"R9QnxyJeWIm0"}},{"cell_type":"code","source":["d = {'ratarata' : '10.0'}\n","\n","print(\"rata rata {}\".format(d[\"rata--rata\"]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":200},"id":"8AeXDKDRWfKt","executionInfo":{"status":"error","timestamp":1648786904268,"user_tz":-420,"elapsed":45,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"d9701db3-5d5f-43ed-d236-82d554e7aba0"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-9dfb541e09c5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0md\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'ratarata'\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0;34m'10.0'\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"rata rata {}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0md\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"rata--rata\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mKeyError\u001b[0m: 'rata--rata'"]}]},{"cell_type":"markdown","source":["To Handle this you need to use try and exception if the Error show up so your program would not stop instantly when Error happened"],"metadata":{"id":"zHkLG6uJW6uZ"}},{"cell_type":"code","source":["try:\n","    print(\"rata rata {}\".format(d[\"rata--rata\"]))\n","except KeyError:\n","    print(\"The Dictionary Does Not Have This Key Please Check Again\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K61IixY6WzxJ","executionInfo":{"status":"ok","timestamp":1648787034911,"user_tz":-420,"elapsed":18,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"504994b5-f133-451a-c1eb-54e8b00f3a8a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The Dictionary Does Not Have This Key Please Check Again\n"]}]},{"cell_type":"code","source":["dictionary = {'ratarata' : '10.0'}\n","\n","print(\"Value of Dictionary {}\".format(int(dictionary['ratarata'])))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":200},"id":"83g2tYcwXY6s","executionInfo":{"status":"error","timestamp":1648787773906,"user_tz":-420,"elapsed":384,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"46d6cb38-896d-4257-db84-0f414c5798cc"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-22-06bed7405650>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdictionary\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'ratarata'\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0;34m'10.0'\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Value of Dictionary {}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdictionary\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'ratarata'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: invalid literal for int() with base 10: '10.0'"]}]},{"cell_type":"markdown","source":["The value was Error because it has diferent type of data from the dictionary, then to handle this error we can use try and except, go to the example:"],"metadata":{"id":"idrOgU4Tar6A"}},{"cell_type":"code","source":["dictionary = {'ratarata' : '10.0'}\n","\n","try:\n","    print(\"Value of Dictionary {}\".format(int(dictionary['ratarata'])))\n","except ValueError:\n","    print(\"Format of the Value wrong\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u5UDqbAHZEaW","executionInfo":{"status":"ok","timestamp":1648787863138,"user_tz":-420,"elapsed":22,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"0a0ff5e6-a0e7-42e9-dd3f-4b39d3605094"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Format of the Value wrong\n"]}]},{"cell_type":"markdown","source":["TypeError\n","\n","TypeError is raised whenever an operation is performed on an incorrect/unsupported object type. For example, using the / (divide) operator on a string and an integer value will raise TypeError."],"metadata":{"id":"U8F20mzva_vj"}},{"cell_type":"code","source":["c = {'ratarata' : '10.0'}\n","\n","print('rata-rata: {}'.format(c['ratarata']/3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":200},"id":"QRG4pmX8aiv9","executionInfo":{"status":"error","timestamp":1648787971873,"user_tz":-420,"elapsed":37,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"6b4735e7-fbc8-4550-ed2c-8104dacc5755"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-24-e211d34c1f99>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'ratarata'\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0;34m'10.0'\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'rata-rata: {}'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'ratarata'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for /: 'str' and 'int'"]}]},{"cell_type":"markdown","source":["To handle this error we can use try and except"],"metadata":{"id":"fbhcktSMbdGf"}},{"cell_type":"code","source":["c = {'ratarata' : '10.0'}\n","\n","try:\n","    print('rata-rata: {}'.format(c['ratarata']/3))\n","except TypeError:\n","    print(\"Unsupported Operand Type\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p4VcL5dLa9W-","executionInfo":{"status":"ok","timestamp":1648788150491,"user_tz":-420,"elapsed":557,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"0b2b3ebb-f67a-4bc8-defb-d60d601abd14"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Unsupported Operand Type\n"]}]},{"cell_type":"markdown","source":["But how if we want to handle the error in a complex program or application\n","\n","Then In more complex applications, exception handling can use a single except statement that handles more than one type of error concatenated in a tuple."],"metadata":{"id":"CIHxk13IcdPR"}},{"cell_type":"code","source":["c = {'ratarata' : '10.0'}\n","\n","try:\n","    print('rata rata: {}'.format(c['ratarata']/3))\n","    print('Value of Dicitonary {}'.format(int(c['ratarata'])))\n","\n","except (TypeError, ValueError):\n","    print('That Was Wrong')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DdmQPRG3bpLI","executionInfo":{"status":"ok","timestamp":1648788809978,"user_tz":-420,"elapsed":46,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"9e8665a9-3f6b-4f85-fef0-f71fff694c98"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["That Was Wrong\n"]}]},{"cell_type":"code","source":["c = {'ratarata' : '10.0'}\n","\n","try:\n","    print('rata rata: {}'.format(c['ratarata']/3))\n","    print('Value of Dicitonary {}'.format(int(c['ratarata'])))\n","\n","except (TypeError, ValueError) as e:\n","    print('That Was Wrong {}'.format(e))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jCKPbYYkc_c-","executionInfo":{"status":"ok","timestamp":1648788888665,"user_tz":-420,"elapsed":32,"user":{"displayName":"Ahmad Fauzan Azhim","userId":"04521237835152447876"}},"outputId":"47fe4840-5071-49a3-d47c-82a93725d0f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["That Was Wrong unsupported operand type(s) for /: 'str' and 'int'\n"]}]}]}